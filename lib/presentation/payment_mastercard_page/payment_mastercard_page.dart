import 'bloc/payment_mastercard_bloc.dart';import 'models/payment_mastercard_model.dart';import 'package:basri_s_application27/core/app_export.dart';import 'package:basri_s_application27/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class PaymentMastercardPage extends StatefulWidget {@override _PaymentMastercardPageState createState() =>  _PaymentMastercardPageState();
static Widget builder(BuildContext context) { return BlocProvider<PaymentMastercardBloc>(create: (context) => PaymentMastercardBloc(PaymentMastercardState(paymentMastercardModelObj: PaymentMastercardModel()))..add(PaymentMastercardInitialEvent()), child: PaymentMastercardPage()); } 
Future<void> onTapFormDateFill(BuildContext context) async  { var initialState = BlocProvider.of<PaymentMastercardBloc>(context).state;DateTime? dateTime  = await showDatePicker(context: context, initialDate: DateTime.now() , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {initialState.paymentMastercardModelObj?.selectedDateTxt = dateTime;context.read<PaymentMastercardBloc>().add(ChangeDateEvent(date: dateTime.format(SHORT_DATE_WITH_FULL_YEAR)));} } 
onTapTxtButtonProgress(BuildContext context) { NavigatorService.pushNamed(AppRoutes.userEmptyScreen, ); } 
 }
class _PaymentMastercardPageState extends State<PaymentMastercardPage> with  AutomaticKeepAliveClientMixin<PaymentMastercardPage> {@override bool get wantKeepAlive =>  true;
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: Colors.transparent, resizeToAvoidBottomInset: false, body: SizedBox(width: size.width, child: SingleChildScrollView(child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 24, top: 20, right: 24), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<PaymentMastercardBloc, PaymentMastercardState, TextEditingController?>(selector: (state) => state.nameController, builder: (context, nameController) {return CustomTextFormField(focusNode: FocusNode(), controller: nameController, hintText: "msg_jonathan_anders".tr, fontStyle: TextFormFieldFontStyle.RalewaySemiBold12Bluegray80001, suffix: Container(margin: getMargin(left: 30, top: 25, right: 16, bottom: 25), decoration: BoxDecoration(borderRadius: BorderRadius.only(bottomLeft: Radius.circular(getHorizontalSize(50)), bottomRight: Radius.circular(getHorizontalSize(50)))), child: CustomImageView(svgPath: ImageConstant.imgUser20x20)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(70)));}), BlocSelector<PaymentMastercardBloc, PaymentMastercardState, TextEditingController?>(selector: (state) => state.cardnumberController, builder: (context, cardnumberController) {return CustomTextFormField(focusNode: FocusNode(), controller: cardnumberController, hintText: "msg_1222_3443_9881".tr, margin: getMargin(top: 15), fontStyle: TextFormFieldFontStyle.MontserratSemiBold12Bluegray80001, suffix: Container(margin: getMargin(left: 30, top: 25, right: 16, bottom: 25), child: CustomImageView(svgPath: ImageConstant.imgVideocamera)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(70)));}), Padding(padding: getPadding(top: 15), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: GestureDetector(onTap: () {onTapFormDateFill(context);}, child: Container(margin: getMargin(right: 5), padding: getPadding(left: 15, top: 25, right: 15, bottom: 25), decoration: AppDecoration.fillGray100.copyWith(borderRadius: BorderRadiusStyle.circleBorder12), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(top: 2, bottom: 2), child: BlocSelector<PaymentMastercardBloc, PaymentMastercardState, String?>(selector: (state) => state.paymentMastercardModelObj!.dateTxt, builder: (context, dateTxt) {return Text(dateTxt ?? "", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtMontserratSemiBold12Bluegray80001.copyWith(letterSpacing: getHorizontalSize(0.36)));})), CustomImageView(svgPath: ImageConstant.imgCalendar, height: getSize(20), width: getSize(20), margin: getMargin(left: 41))])))), Expanded(child: BlocSelector<PaymentMastercardBloc, PaymentMastercardState, TextEditingController?>(selector: (state) => state.cvvController, builder: (context, cvvController) {return CustomTextFormField(focusNode: FocusNode(), controller: cvvController, hintText: "lbl_cvv".tr, margin: getMargin(left: 5), padding: TextFormFieldPadding.PaddingT26, textInputAction: TextInputAction.done, prefix: Container(margin: getMargin(left: 16, top: 25, right: 10, bottom: 25), child: CustomImageView(svgPath: ImageConstant.imgVideocamera)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(70)));}))])), CustomImageView(imagePath: ImageConstant.imageNotFound, height: getVerticalSize(1), width: getHorizontalSize(100), margin: getMargin(top: 30)), GestureDetector(onTap: () {onTapTxtButtonProgress(context);}, child: Container(width: getHorizontalSize(327), margin: getMargin(top: 10), padding: getPadding(left: 30, top: 25, right: 145, bottom: 25), decoration: AppDecoration.txtFillIndigoA400.copyWith(borderRadius: BorderRadiusStyle.txtCircleBorder35), child: Text("lbl_next".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRalewaySemiBold16)))]))]))))); } 
Future<void> onTapFormDateFill(BuildContext context) async  { var initialState = BlocProvider.of<PaymentMastercardBloc>(context).state;DateTime? dateTime  = await showDatePicker(context: context, initialDate: DateTime.now() , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {initialState.paymentMastercardModelObj?.selectedDateTxt = dateTime;context.read<PaymentMastercardBloc>().add(ChangeDateEvent(date: dateTime.format(SHORT_DATE_WITH_FULL_YEAR)));}var initialState = BlocProvider.of<PaymentMastercardBloc>(context).state;DateTime? dateTime  = await showDatePicker(context: context, initialDate: DateTime.now() , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {initialState.paymentMastercardModelObj?.selectedDateTxt = dateTime;context.read<PaymentMastercardBloc>().add(ChangeDateEvent(date: dateTime.format(SHORT_DATE_WITH_FULL_YEAR)));} } 
onTapTxtButtonProgress(BuildContext context) { NavigatorService.pushNamed(AppRoutes.userEmptyScreen, ); } 
 }
