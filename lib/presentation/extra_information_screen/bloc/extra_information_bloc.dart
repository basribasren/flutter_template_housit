import '../models/layout5_item_model.dart';import '../models/layout7_item_model.dart';import '../models/layout9_item_model.dart';import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/layout5_item_model.dart';import '../models/listtype_item_model.dart';import '../models/layout7_item_model.dart';import '../models/layout9_item_model.dart';import 'package:basri_s_application27/presentation/extra_information_screen/models/extra_information_model.dart';part 'extra_information_event.dart';part 'extra_information_state.dart';class ExtraInformationBloc extends Bloc<ExtraInformationEvent, ExtraInformationState> {ExtraInformationBloc(ExtraInformationState initialState) : super(initialState) { on<ExtraInformationInitialEvent>(_onInitialize); on<UpdateChipViewEvent>(_updateChipView); on<UpdateChipView1Event>(_updateChipView1); on<UpdateChipView2Event>(_updateChipView2); }

_updateChipView(UpdateChipViewEvent event, Emitter<ExtraInformationState> emit, ) { List<Layout5ItemModel> newList = List<Layout5ItemModel>.from(state.extraInformationModelObj!.layout5ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(extraInformationModelObj: state.extraInformationModelObj?.copyWith(layout5ItemList: newList))); } 
_updateChipView1(UpdateChipView1Event event, Emitter<ExtraInformationState> emit, ) { List<Layout7ItemModel> newList = List<Layout7ItemModel>.from(state.extraInformationModelObj!.layout7ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(extraInformationModelObj: state.extraInformationModelObj?.copyWith(layout7ItemList: newList))); } 
_updateChipView2(UpdateChipView2Event event, Emitter<ExtraInformationState> emit, ) { List<Layout9ItemModel> newList = List<Layout9ItemModel>.from(state.extraInformationModelObj!.layout9ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(extraInformationModelObj: state.extraInformationModelObj?.copyWith(layout9ItemList: newList))); } 
List<Layout5ItemModel> fillLayout5ItemList() { return List.generate(2, (index) => Layout5ItemModel()); } 
List<ListtypeItemModel> fillListtypeItemList() { return List.generate(3, (index) => ListtypeItemModel()); } 
List<Layout7ItemModel> fillLayout7ItemList() { return List.generate(4, (index) => Layout7ItemModel()); } 
List<Layout9ItemModel> fillLayout9ItemList() { return List.generate(7, (index) => Layout9ItemModel()); } 
_onInitialize(ExtraInformationInitialEvent event, Emitter<ExtraInformationState> emit, ) async  { emit(state.copyWith(priceController: TextEditingController(), formvaluefillController: TextEditingController())); emit(state.copyWith(extraInformationModelObj: state.extraInformationModelObj?.copyWith(layout5ItemList: fillLayout5ItemList(), listtypeItemList: fillListtypeItemList(), layout7ItemList: fillLayout7ItemList(), layout9ItemList: fillLayout9ItemList()))); } 
 }
