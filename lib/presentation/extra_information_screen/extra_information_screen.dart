import '../extra_information_screen/widgets/layout5_item_widget.dart';import '../extra_information_screen/widgets/layout7_item_widget.dart';import '../extra_information_screen/widgets/layout9_item_widget.dart';import '../extra_information_screen/widgets/listtype_item_widget.dart';import 'bloc/extra_information_bloc.dart';import 'models/extra_information_model.dart';import 'models/layout5_item_model.dart';import 'models/layout7_item_model.dart';import 'models/layout9_item_model.dart';import 'models/listtype_item_model.dart';import 'package:basri_s_application27/core/app_export.dart';import 'package:basri_s_application27/widgets/app_bar/appbar_iconbutton_2.dart';import 'package:basri_s_application27/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application27/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application27/widgets/custom_button.dart';import 'package:basri_s_application27/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'package:basri_s_application27/presentation/extra_information_success_bottomsheet/extra_information_success_bottomsheet.dart';class ExtraInformationScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<ExtraInformationBloc>(create: (context) => ExtraInformationBloc(ExtraInformationState(extraInformationModelObj: ExtraInformationModel()))..add(ExtraInformationInitialEvent()), child: ExtraInformationScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(50), leadingWidth: 74, leading: AppbarIconbutton2(svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24), onTap: () {onTapArrowleft10(context);}), centerTitle: true, title: AppbarTitle(text: "lbl_add_listing".tr)), body: SizedBox(width: size.width, child: SingleChildScrollView(child: Padding(padding: getPadding(left: 24, top: 54, right: 4, bottom: 5), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: getHorizontalSize(297), margin: getMargin(right: 50), child: Text("msg_almost_finish".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtRalewayMedium25.copyWith(letterSpacing: getHorizontalSize(0.75)))), Padding(padding: getPadding(top: 33), child: Text("lbl_sell_price".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRalewayBold18.copyWith(letterSpacing: getHorizontalSize(0.54)))), BlocSelector<ExtraInformationBloc, ExtraInformationState, TextEditingController?>(selector: (state) => state.priceController, builder: (context, priceController) {return CustomTextFormField(focusNode: FocusNode(), controller: priceController, hintText: "lbl_180_000".tr, margin: getMargin(top: 19, right: 20), fontStyle: TextFormFieldFontStyle.MontserratSemiBold12Bluegray80001, suffix: Container(margin: getMargin(left: 30, top: 25, right: 16, bottom: 25), child: CustomImageView(svgPath: ImageConstant.imgAlarm)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(70)));}), Padding(padding: getPadding(top: 34), child: Text("lbl_rent_price".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRalewayBold18.copyWith(letterSpacing: getHorizontalSize(0.54)))), BlocSelector<ExtraInformationBloc, ExtraInformationState, TextEditingController?>(selector: (state) => state.formvaluefillController, builder: (context, formvaluefillController) {return CustomTextFormField(focusNode: FocusNode(), controller: formvaluefillController, margin: getMargin(top: 19, right: 20), textInputAction: TextInputAction.done, suffix: Container(margin: getMargin(left: 30, top: 25, right: 16, bottom: 25), child: CustomImageView(svgPath: ImageConstant.imgAlarm)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(70)));}), Padding(padding: getPadding(left: 1, top: 15), child: BlocSelector<ExtraInformationBloc, ExtraInformationState, ExtraInformationModel?>(selector: (state) => state.extraInformationModelObj, builder: (context, extraInformationModelObj) {return Wrap(runSpacing: getVerticalSize(5), spacing: getHorizontalSize(5), children: List<Widget>.generate(extraInformationModelObj?.layout5ItemList.length ?? 0, (index) {Layout5ItemModel model = extraInformationModelObj?.layout5ItemList[index] ?? Layout5ItemModel(); return Layout5ItemWidget(model, onSelectedChipView: (value) {context.read<ExtraInformationBloc>().add(UpdateChipViewEvent(index: index, isSelected: value));});}));})), Padding(padding: getPadding(top: 38), child: Text("msg_property_featur".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRalewayBold18.copyWith(letterSpacing: getHorizontalSize(0.54)))), Padding(padding: getPadding(top: 17, right: 20), child: BlocSelector<ExtraInformationBloc, ExtraInformationState, ExtraInformationModel?>(selector: (state) => state.extraInformationModelObj, builder: (context, extraInformationModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(15));}, itemCount: extraInformationModelObj?.listtypeItemList.length ?? 0, itemBuilder: (context, index) {ListtypeItemModel model = extraInformationModelObj?.listtypeItemList[index] ?? ListtypeItemModel(); return ListtypeItemWidget(model);});})), Padding(padding: getPadding(left: 1, top: 34), child: Text("lbl_total_rooms".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRalewayBold18)), Padding(padding: getPadding(top: 19), child: BlocSelector<ExtraInformationBloc, ExtraInformationState, ExtraInformationModel?>(selector: (state) => state.extraInformationModelObj, builder: (context, extraInformationModelObj) {return Wrap(runSpacing: getVerticalSize(5), spacing: getHorizontalSize(5), children: List<Widget>.generate(extraInformationModelObj?.layout7ItemList.length ?? 0, (index) {Layout7ItemModel model = extraInformationModelObj?.layout7ItemList[index] ?? Layout7ItemModel(); return Layout7ItemWidget(model, onSelectedChipView: (value) {context.read<ExtraInformationBloc>().add(UpdateChipView1Event(index: index, isSelected: value));});}));})), Padding(padding: getPadding(left: 1, top: 36), child: Text("msg_environment_f".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRalewayBold18)), Padding(padding: getPadding(left: 1, top: 19), child: BlocSelector<ExtraInformationBloc, ExtraInformationState, ExtraInformationModel?>(selector: (state) => state.extraInformationModelObj, builder: (context, extraInformationModelObj) {return Wrap(runSpacing: getVerticalSize(5), spacing: getHorizontalSize(5), children: List<Widget>.generate(extraInformationModelObj?.layout9ItemList.length ?? 0, (index) {Layout9ItemModel model = extraInformationModelObj?.layout9ItemList[index] ?? Layout9ItemModel(); return Layout9ItemWidget(model, onSelectedChipView: (value) {context.read<ExtraInformationBloc>().add(UpdateChipView2Event(index: index, isSelected: value));});}));})), CustomImageView(imagePath: ImageConstant.imgProgressbargradient, height: getVerticalSize(1), width: getHorizontalSize(100), margin: getMargin(left: 114, top: 49))])))), bottomNavigationBar: CustomButton(height: getVerticalSize(70), text: "lbl_finish".tr, margin: getMargin(left: 25, right: 23, bottom: 24), onTap: () {onTapFinish(context);}))); } 
onTapFinish(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>ExtraInformationSuccessBottomsheet.builder(context),isScrollControlled: true); } 
onTapArrowleft10(BuildContext context) { NavigatorService.goBack(); } 
 }
