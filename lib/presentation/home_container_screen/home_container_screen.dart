import 'bloc/home_container_bloc.dart';import 'models/home_container_model.dart';import 'package:basri_s_application27/core/app_export.dart';import 'package:basri_s_application27/presentation/example_data_page/example_data_page.dart';import 'package:basri_s_application27/presentation/home_page/home_page.dart';import 'package:basri_s_application27/presentation/transaction_tab_container_page/transaction_tab_container_page.dart';import 'package:basri_s_application27/presentation/vertical_page/vertical_page.dart';import 'package:basri_s_application27/widgets/custom_bottom_bar.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class HomeContainerScreen extends StatelessWidget {GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<HomeContainerBloc>(create: (context) => HomeContainerBloc(HomeContainerState(homeContainerModelObj: HomeContainerModel()))..add(HomeContainerInitialEvent()), child: HomeContainerScreen()); } 
@override Widget build(BuildContext context) { return BlocBuilder<HomeContainerBloc, HomeContainerState>(builder: (context, state) {return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, body: Navigator(key: navigatorKey, initialRoute: AppRoutes.homePage, onGenerateRoute: (routeSetting) => PageRouteBuilder(pageBuilder: (ctx, ani, ani1) => getCurrentPage(context, routeSetting.name!), transitionDuration: Duration(seconds: 0))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));})));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Iconhouseactive: return AppRoutes.homePage; case BottomBarEnum.Search: return AppRoutes.exampleDataPage; case BottomBarEnum.Favoritebluegray80001: return AppRoutes.verticalPage; case BottomBarEnum.User25x25: return AppRoutes.transactionTabContainerPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homePage: return HomePage.builder(context); case AppRoutes.exampleDataPage: return ExampleDataPage.builder(context); case AppRoutes.verticalPage: return VerticalPage.builder(context); case AppRoutes.transactionTabContainerPage: return TransactionTabContainerPage.builder(context); default: return DefaultWidget();} } 
 }
