import '../models/layout12_item_model.dart';import '../models/layout14_item_model.dart';import '../models/layout16_item_model.dart';import '../models/layout18_item_model.dart';import '../models/chipview4_item_model.dart';import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/layout12_item_model.dart';import '../models/layout14_item_model.dart';import '../models/gridshape5_item_model.dart';import '../models/layout16_item_model.dart';import '../models/editform_item_model.dart';import '../models/layout18_item_model.dart';import '../models/chipview4_item_model.dart';import 'package:basri_s_application27/presentation/edit_form_screen/models/edit_form_model.dart';part 'edit_form_event.dart';part 'edit_form_state.dart';class EditFormBloc extends Bloc<EditFormEvent, EditFormState> {EditFormBloc(EditFormState initialState) : super(initialState) { on<EditFormInitialEvent>(_onInitialize); on<UpdateChipViewEvent>(_updateChipView); on<UpdateChipView1Event>(_updateChipView1); on<UpdateChipView2Event>(_updateChipView2); on<UpdateChipView3Event>(_updateChipView3); on<UpdateChipView4Event>(_updateChipView4); }

_updateChipView(UpdateChipViewEvent event, Emitter<EditFormState> emit, ) { List<Layout12ItemModel> newList = List<Layout12ItemModel>.from(state.editFormModelObj!.layout12ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(editFormModelObj: state.editFormModelObj?.copyWith(layout12ItemList: newList))); } 
_updateChipView1(UpdateChipView1Event event, Emitter<EditFormState> emit, ) { List<Layout14ItemModel> newList = List<Layout14ItemModel>.from(state.editFormModelObj!.layout14ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(editFormModelObj: state.editFormModelObj?.copyWith(layout14ItemList: newList))); } 
_updateChipView2(UpdateChipView2Event event, Emitter<EditFormState> emit, ) { List<Layout16ItemModel> newList = List<Layout16ItemModel>.from(state.editFormModelObj!.layout16ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(editFormModelObj: state.editFormModelObj?.copyWith(layout16ItemList: newList))); } 
_updateChipView3(UpdateChipView3Event event, Emitter<EditFormState> emit, ) { List<Layout18ItemModel> newList = List<Layout18ItemModel>.from(state.editFormModelObj!.layout18ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(editFormModelObj: state.editFormModelObj?.copyWith(layout18ItemList: newList))); } 
_updateChipView4(UpdateChipView4Event event, Emitter<EditFormState> emit, ) { List<Chipview4ItemModel> newList = List<Chipview4ItemModel>.from(state.editFormModelObj!.chipview4ItemList); newList[event.index] = newList[event.index].copyWith(isSelected: event.isSelected); emit(state.copyWith(editFormModelObj: state.editFormModelObj?.copyWith(chipview4ItemList: newList))); } 
List<Layout12ItemModel> fillLayout12ItemList() { return List.generate(2, (index) => Layout12ItemModel()); } 
List<Layout14ItemModel> fillLayout14ItemList() { return List.generate(5, (index) => Layout14ItemModel()); } 
List<Gridshape5ItemModel> fillGridshape5ItemList() { return List.generate(4, (index) => Gridshape5ItemModel()); } 
List<Layout16ItemModel> fillLayout16ItemList() { return List.generate(2, (index) => Layout16ItemModel()); } 
List<EditformItemModel> fillEditformItemList() { return List.generate(3, (index) => EditformItemModel()); } 
List<Layout18ItemModel> fillLayout18ItemList() { return List.generate(4, (index) => Layout18ItemModel()); } 
List<Chipview4ItemModel> fillChipview4ItemList() { return List.generate(7, (index) => Chipview4ItemModel()); } 
_onInitialize(EditFormInitialEvent event, Emitter<EditFormState> emit, ) async  { emit(state.copyWith(formPasswordController: TextEditingController())); emit(state.copyWith(editFormModelObj: state.editFormModelObj?.copyWith(layout12ItemList: fillLayout12ItemList(), layout14ItemList: fillLayout14ItemList(), gridshape5ItemList: fillGridshape5ItemList(), layout16ItemList: fillLayout16ItemList(), editformItemList: fillEditformItemList(), layout18ItemList: fillLayout18ItemList(), chipview4ItemList: fillChipview4ItemList()))); } 
 }
